name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Lightsail Deployment
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-2'
        run: |
          | aws lightsail create-container-service-deployment --service-name kiosk-backend --containers "{
              \"kiosk-backend\": {
                \"image\": \"ghcr.io/creativesolutionsgroup/smart-events-kiosk-backend:main\",
                \"command\": [],
                \"environment\": {
                  \"SERVICE_KEY\": \"${{env.SERVICE_KEY}}\",
                  \"PORT\": \"80\",
                  \"SERVICE_EMAIL\": \"${{env.SERVICE_EMAIL}}\",
                  \"SHEET_ID\": \"${{env.SHEET_ID}}\"
                },
                \"ports\": {
                  \"80\": \"HTTP\"
                }
              }
            }" --public-endpoint "{
              \"containerName\": \"kiosk-backend\",
              \"containerPort\": 80,
              \"healthCheck\": {
                  \"healthyThreshold\": 2,
                  \"unhealthyThreshold\": 2,
                  \"timeoutSeconds\": 2,
                  \"intervalSeconds\": 5,
                  \"path\": \"/\",
                  \"successCodes\": \"200-499\"
              }
            }"